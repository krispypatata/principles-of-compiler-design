CAPITAL FOR NONTERMINALS
small letter for terminals



arithmetic operations
parentheses i coconsider

# input.txt contains the inputs for the program
# IMPORTANT: Don't delete '-1' at the end of the input file (This indicates end of file)
# List all down grammar rules (1 grammar rule for each line)
# Write the string to derive before the line with '-1'


other sample input:
E -> T E'
E' -> + T E' | ε
T -> F T'
T' -> * F T' | ε
F -> ( E ) | id


What to do:
1. Read Input from a file
2. Categorize inputs into productions and strings to derive
3. Make cfg using the productions (Capital letters for Nonterminal Symbols, lowercase letters for terminal symbols, '#' for null/empty symbol)
4. Derive the input string to derive using the cfg
5. Display the transformations of starting symbol into the input string to derive


sample input 1:
'''
Productions
S -> S S + | S S * | a
Strings to derive
a a + a *
a a *
'''

expected sample output 1:
'''
S
S S*
S S + S*
a S + S*
a a + S*
a a + a *
'''


sample input 2:
'''
Productions
A -> C B
B -> + C B | #
C -> E D
D -> * E D | #
E -> ( A ) | n
Strings to derive
n + n * n
'''

expected sample output 2:
'''
A  
C B  
E D B  
n D B  
n # B  
n # + C B  
n # + E D B  
n # + n D B  
n # + n * E D B  
n # + n * n D B  
n # + n * n # B  
n # + n * n # #
'''
